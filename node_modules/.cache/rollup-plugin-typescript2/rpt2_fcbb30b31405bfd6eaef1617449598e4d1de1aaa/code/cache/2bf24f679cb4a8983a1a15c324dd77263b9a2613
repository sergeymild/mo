{"code":"import { getDescriptor, objectPrototype, die, recordAnnotationApplied, storedAnnotationsSymbol } from \"../internal\";\r\nexport function createComputedAnnotation(name, options) {\r\n    return {\r\n        annotationType_: name,\r\n        options_: options,\r\n        make_,\r\n        extend_\r\n    };\r\n}\r\nfunction make_(adm, key) {\r\n    let source = adm.target_;\r\n    while (source && source !== objectPrototype) {\r\n        const descriptor = getDescriptor(source, key);\r\n        if (descriptor) {\r\n            assertComputedDescriptor(adm, this, key, descriptor);\r\n            const definePropertyOutcome = adm.defineComputedProperty_(key, {\r\n                ...this.options_,\r\n                get: descriptor.get,\r\n                set: descriptor.set\r\n            });\r\n            if (!definePropertyOutcome) {\r\n                // Intercepted\r\n                return;\r\n            }\r\n            recordAnnotationApplied(adm, this, key);\r\n            return;\r\n        }\r\n        source = Object.getPrototypeOf(source);\r\n    }\r\n    if (!adm.target_[storedAnnotationsSymbol]?.[key]) {\r\n        // Throw on missing key, except for decorators:\r\n        // Decorator annotations are collected from whole prototype chain.\r\n        // When called from super() some props may not exist yet.\r\n        // However we don't have to worry about missing prop,\r\n        // because the decorator must have been applied to something.\r\n        die(1, this.annotationType_, `${adm.name_}.${key.toString()}`);\r\n    }\r\n}\r\nfunction extend_(adm, key, descriptor, proxyTrap) {\r\n    assertComputedDescriptor(adm, this, key, descriptor);\r\n    return adm.defineComputedProperty_(key, {\r\n        ...this.options_,\r\n        get: descriptor.get,\r\n        set: descriptor.set\r\n    }, proxyTrap);\r\n}\r\nfunction assertComputedDescriptor(adm, { annotationType_ }, key, { get }) {\r\n    if (__DEV__ && !get) {\r\n        die(`Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\r\n            `\\n'${annotationType_}' can only be used on getter(+setter) properties.`);\r\n    }\r\n}\r\n//# sourceMappingURL=computedannotation.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"computedannotation.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/types/computedannotation.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAEH,aAAa,EACb,eAAe,EACf,GAAG,EAEH,uBAAuB,EACvB,uBAAuB,EAC1B,MAAM,aAAa,CAAA;AAEpB,MAAM,UAAU,wBAAwB,CAAC,IAAY,EAAE,OAAgB;IACnE,OAAO;QACH,eAAe,EAAE,IAAI;QACrB,QAAQ,EAAE,OAAO;QACjB,KAAK;QACL,OAAO;KACV,CAAA;AACL,CAAC;AAED,SAAS,KAAK,CAAC,GAAmC,EAAE,GAAgB;IAChE,IAAI,MAAM,GAAG,GAAG,CAAC,OAAO,CAAA;IACxB,OAAO,MAAM,IAAI,MAAM,KAAK,eAAe,EAAE;QACzC,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,GAAG,CAAC,CAAA;QAC7C,IAAI,UAAU,EAAE;YACZ,wBAAwB,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,CAAC,CAAA;YACpD,MAAM,qBAAqB,GAAG,GAAG,CAAC,uBAAuB,CAAC,GAAG,EAAE;gBAC3D,GAAG,IAAI,CAAC,QAAQ;gBAChB,GAAG,EAAE,UAAU,CAAC,GAAG;gBACnB,GAAG,EAAE,UAAU,CAAC,GAAG;aACtB,CAAC,CAAA;YACF,IAAI,CAAC,qBAAqB,EAAE;gBACxB,cAAc;gBACd,OAAM;aACT;YACD,uBAAuB,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,CAAC,CAAA;YACvC,OAAM;SACT;QACD,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAA;KACzC;IACD,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,uBAAuB,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE;QAC9C,+CAA+C;QAC/C,kEAAkE;QAClE,yDAAyD;QACzD,qDAAqD;QACrD,6DAA6D;QAC7D,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,EAAE,GAAG,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAA;KACjE;AACL,CAAC;AAED,SAAS,OAAO,CACZ,GAAmC,EACnC,GAAgB,EAChB,UAA8B,EAC9B,SAAkB;IAElB,wBAAwB,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAE,UAAU,CAAC,CAAA;IACpD,OAAO,GAAG,CAAC,uBAAuB,CAC9B,GAAG,EACH;QACI,GAAG,IAAI,CAAC,QAAQ;QAChB,GAAG,EAAE,UAAU,CAAC,GAAG;QACnB,GAAG,EAAE,UAAU,CAAC,GAAG;KACtB,EACD,SAAS,CACZ,CAAA;AACL,CAAC;AAED,SAAS,wBAAwB,CAC7B,GAAmC,EACnC,EAAE,eAAe,EAAc,EAC/B,GAAgB,EAChB,EAAE,GAAG,EAAsB;IAE3B,IAAI,OAAO,IAAI,CAAC,GAAG,EAAE;QACjB,GAAG,CACC,iBAAiB,eAAe,SAAS,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,QAAQ,EAAE,IAAI;YACpE,MAAM,eAAe,mDAAmD,CAC/E,CAAA;KACJ;AACL,CAAC\"}"}
