{"code":"import { $mobx, IDerivationState_, TraceMode, clearObserving, createInstanceofPredicate, endBatch, getNextId, globalState, isCaughtException, isSpyEnabled, shouldCompute, spyReport, spyReportEnd, spyReportStart, startBatch, trace, trackDerivedFunction } from \"../internal\";\r\nexport class Reaction {\r\n    name_;\r\n    onInvalidate_;\r\n    errorHandler_;\r\n    requiresObservable_;\r\n    observing_ = []; // nodes we are looking at. Our value depends on these nodes\r\n    newObserving_ = [];\r\n    dependenciesState_ = IDerivationState_.NOT_TRACKING_;\r\n    diffValue_ = 0;\r\n    runId_ = 0;\r\n    unboundDepsCount_ = 0;\r\n    isDisposed_ = false;\r\n    isScheduled_ = false;\r\n    isTrackPending_ = false;\r\n    isRunning_ = false;\r\n    isTracing_ = TraceMode.NONE;\r\n    constructor(name_ = __DEV__ ? \"Reaction@\" + getNextId() : \"Reaction\", onInvalidate_, errorHandler_, requiresObservable_ = false) {\r\n        this.name_ = name_;\r\n        this.onInvalidate_ = onInvalidate_;\r\n        this.errorHandler_ = errorHandler_;\r\n        this.requiresObservable_ = requiresObservable_;\r\n    }\r\n    onBecomeStale_() {\r\n        this.schedule_();\r\n    }\r\n    schedule_() {\r\n        if (!this.isScheduled_) {\r\n            this.isScheduled_ = true;\r\n            globalState.pendingReactions.push(this);\r\n            runReactions();\r\n        }\r\n    }\r\n    isScheduled() {\r\n        return this.isScheduled_;\r\n    }\r\n    /**\r\n     * internal, use schedule() if you intend to kick off a reaction\r\n     */\r\n    runReaction_() {\r\n        if (!this.isDisposed_) {\r\n            startBatch();\r\n            this.isScheduled_ = false;\r\n            const prev = globalState.trackingContext;\r\n            globalState.trackingContext = this;\r\n            if (shouldCompute(this)) {\r\n                this.isTrackPending_ = true;\r\n                try {\r\n                    this.onInvalidate_();\r\n                    if (__DEV__ && this.isTrackPending_ && isSpyEnabled()) {\r\n                        // onInvalidate didn't trigger track right away..\r\n                        spyReport({\r\n                            name: this.name_,\r\n                            type: \"scheduled-reaction\"\r\n                        });\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    this.reportExceptionInDerivation_(e);\r\n                }\r\n            }\r\n            globalState.trackingContext = prev;\r\n            endBatch();\r\n        }\r\n    }\r\n    track(fn) {\r\n        if (this.isDisposed_) {\r\n            return;\r\n            // console.warn(\"Reaction already disposed\") // Note: Not a warning / error in mobx 4 either\r\n        }\r\n        startBatch();\r\n        const notify = isSpyEnabled();\r\n        let startTime;\r\n        if (__DEV__ && notify) {\r\n            startTime = Date.now();\r\n            spyReportStart({\r\n                name: this.name_,\r\n                type: \"reaction\"\r\n            });\r\n        }\r\n        this.isRunning_ = true;\r\n        const prevReaction = globalState.trackingContext; // reactions could create reactions...\r\n        globalState.trackingContext = this;\r\n        const result = trackDerivedFunction(this, fn, undefined);\r\n        globalState.trackingContext = prevReaction;\r\n        this.isRunning_ = false;\r\n        this.isTrackPending_ = false;\r\n        if (this.isDisposed_) {\r\n            // disposed during last run. Clean up everything that was bound after the dispose call.\r\n            clearObserving(this);\r\n        }\r\n        if (isCaughtException(result))\r\n            this.reportExceptionInDerivation_(result.cause);\r\n        if (__DEV__ && notify) {\r\n            spyReportEnd({\r\n                time: Date.now() - startTime\r\n            });\r\n        }\r\n        endBatch();\r\n    }\r\n    reportExceptionInDerivation_(error) {\r\n        if (this.errorHandler_) {\r\n            this.errorHandler_(error, this);\r\n            return;\r\n        }\r\n        if (globalState.disableErrorBoundaries)\r\n            throw error;\r\n        const message = __DEV__\r\n            ? `[mobx] Encountered an uncaught exception that was thrown by a reaction or observer component, in: '${this}'`\r\n            : `[mobx] uncaught error in '${this}'`;\r\n        if (!globalState.suppressReactionErrors) {\r\n            console.error(message, error);\r\n            /** If debugging brought you here, please, read the above message :-). Tnx! */\r\n        }\r\n        else if (__DEV__)\r\n            console.warn(`[mobx] (error in reaction '${this.name_}' suppressed, fix error of causing action below)`); // prettier-ignore\r\n        if (__DEV__ && isSpyEnabled()) {\r\n            spyReport({\r\n                type: \"error\",\r\n                name: this.name_,\r\n                message,\r\n                error: \"\" + error\r\n            });\r\n        }\r\n        globalState.globalReactionErrorHandlers.forEach(f => f(error, this));\r\n    }\r\n    dispose() {\r\n        if (!this.isDisposed_) {\r\n            this.isDisposed_ = true;\r\n            if (!this.isRunning_) {\r\n                // if disposed while running, clean up later. Maybe not optimal, but rare case\r\n                startBatch();\r\n                clearObserving(this);\r\n                endBatch();\r\n            }\r\n        }\r\n    }\r\n    getDisposer_() {\r\n        const r = this.dispose.bind(this);\r\n        r[$mobx] = this;\r\n        return r;\r\n    }\r\n    toString() {\r\n        return `Reaction[${this.name_}]`;\r\n    }\r\n    trace(enterBreakPoint = false) {\r\n        trace(this, enterBreakPoint);\r\n    }\r\n}\r\nexport function onReactionError(handler) {\r\n    globalState.globalReactionErrorHandlers.push(handler);\r\n    return () => {\r\n        const idx = globalState.globalReactionErrorHandlers.indexOf(handler);\r\n        if (idx >= 0)\r\n            globalState.globalReactionErrorHandlers.splice(idx, 1);\r\n    };\r\n}\r\n/**\r\n * Magic number alert!\r\n * Defines within how many times a reaction is allowed to re-trigger itself\r\n * until it is assumed that this is gonna be a never ending loop...\r\n */\r\nconst MAX_REACTION_ITERATIONS = 100;\r\nlet reactionScheduler = f => f();\r\nexport function runReactions() {\r\n    // Trampolining, if runReactions are already running, new reactions will be picked up\r\n    if (globalState.inBatch > 0 || globalState.isRunningReactions)\r\n        return;\r\n    reactionScheduler(runReactionsHelper);\r\n}\r\nfunction runReactionsHelper() {\r\n    globalState.isRunningReactions = true;\r\n    const allReactions = globalState.pendingReactions;\r\n    let iterations = 0;\r\n    // While running reactions, new reactions might be triggered.\r\n    // Hence we work with two variables and check whether\r\n    // we converge to no remaining reactions after a while.\r\n    while (allReactions.length > 0) {\r\n        if (++iterations === MAX_REACTION_ITERATIONS) {\r\n            console.error(__DEV__\r\n                ? `Reaction doesn't converge to a stable state after ${MAX_REACTION_ITERATIONS} iterations.` +\r\n                    ` Probably there is a cycle in the reactive function: ${allReactions[0]}`\r\n                : `[mobx] cycle in reaction: ${allReactions[0]}`);\r\n            allReactions.splice(0); // clear reactions\r\n        }\r\n        let remainingReactions = allReactions.splice(0);\r\n        for (let i = 0, l = remainingReactions.length; i < l; i++)\r\n            remainingReactions[i].runReaction_();\r\n    }\r\n    globalState.isRunningReactions = false;\r\n}\r\nexport const isReaction = createInstanceofPredicate(\"Reaction\", Reaction);\r\nexport function setReactionScheduler(fn) {\r\n    const baseScheduler = reactionScheduler;\r\n    reactionScheduler = f => fn(() => baseScheduler(f));\r\n}\r\n//# sourceMappingURL=reaction.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"reaction.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/core/reaction.ts\"],\"names\":[],\"mappings\":\"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\"}"}
