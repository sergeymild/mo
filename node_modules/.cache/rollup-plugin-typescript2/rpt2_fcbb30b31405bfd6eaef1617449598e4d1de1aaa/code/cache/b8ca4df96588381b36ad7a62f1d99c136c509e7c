{"code":"import { $mobx, createAtom, deepEnhancer, getNextId, isSpyEnabled, hasListeners, registerListener, spyReportStart, notifyListeners, spyReportEnd, createInstanceofPredicate, hasInterceptors, interceptChange, registerInterceptor, checkIfStateModificationsAreAllowed, untracked, makeIterable, transaction, isES6Set, DELETE, ADD, die, isFunction } from \"../internal\";\r\nconst ObservableSetMarker = {};\r\nexport class ObservableSet {\r\n    name_;\r\n    [$mobx] = ObservableSetMarker;\r\n    data_ = new Set();\r\n    atom_;\r\n    changeListeners_;\r\n    interceptors_;\r\n    dehancer;\r\n    enhancer_;\r\n    constructor(initialData, enhancer = deepEnhancer, name_ = __DEV__ ? \"ObservableSet@\" + getNextId() : \"ObservableSet\") {\r\n        this.name_ = name_;\r\n        if (!isFunction(Set)) {\r\n            die(22);\r\n        }\r\n        this.atom_ = createAtom(this.name_);\r\n        this.enhancer_ = (newV, oldV) => enhancer(newV, oldV, name_);\r\n        if (initialData) {\r\n            this.replace(initialData);\r\n        }\r\n    }\r\n    dehanceValue_(value) {\r\n        if (this.dehancer !== undefined) {\r\n            return this.dehancer(value);\r\n        }\r\n        return value;\r\n    }\r\n    clear() {\r\n        transaction(() => {\r\n            untracked(() => {\r\n                for (const value of this.data_.values())\r\n                    this.delete(value);\r\n            });\r\n        });\r\n    }\r\n    forEach(callbackFn, thisArg) {\r\n        for (const value of this) {\r\n            callbackFn.call(thisArg, value, value, this);\r\n        }\r\n    }\r\n    get size() {\r\n        this.atom_.reportObserved();\r\n        return this.data_.size;\r\n    }\r\n    add(value) {\r\n        checkIfStateModificationsAreAllowed(this.atom_);\r\n        if (hasInterceptors(this)) {\r\n            const change = interceptChange(this, {\r\n                type: ADD,\r\n                object: this,\r\n                newValue: value\r\n            });\r\n            if (!change)\r\n                return this;\r\n            // ideally, value = change.value would be done here, so that values can be\r\n            // changed by interceptor. Same applies for other Set and Map api's.\r\n        }\r\n        if (!this.has(value)) {\r\n            transaction(() => {\r\n                this.data_.add(this.enhancer_(value, undefined));\r\n                this.atom_.reportChanged();\r\n            });\r\n            const notifySpy = __DEV__ && isSpyEnabled();\r\n            const notify = hasListeners(this);\r\n            const change = notify || notifySpy\r\n                ? {\r\n                    observableKind: \"set\",\r\n                    debugObjectName: this.name_,\r\n                    type: ADD,\r\n                    object: this,\r\n                    newValue: value\r\n                }\r\n                : null;\r\n            if (notifySpy && __DEV__)\r\n                spyReportStart(change);\r\n            if (notify)\r\n                notifyListeners(this, change);\r\n            if (notifySpy && __DEV__)\r\n                spyReportEnd();\r\n        }\r\n        return this;\r\n    }\r\n    delete(value) {\r\n        if (hasInterceptors(this)) {\r\n            const change = interceptChange(this, {\r\n                type: DELETE,\r\n                object: this,\r\n                oldValue: value\r\n            });\r\n            if (!change)\r\n                return false;\r\n        }\r\n        if (this.has(value)) {\r\n            const notifySpy = __DEV__ && isSpyEnabled();\r\n            const notify = hasListeners(this);\r\n            const change = notify || notifySpy\r\n                ? {\r\n                    observableKind: \"set\",\r\n                    debugObjectName: this.name_,\r\n                    type: DELETE,\r\n                    object: this,\r\n                    oldValue: value\r\n                }\r\n                : null;\r\n            if (notifySpy && __DEV__)\r\n                spyReportStart(change);\r\n            transaction(() => {\r\n                this.atom_.reportChanged();\r\n                this.data_.delete(value);\r\n            });\r\n            if (notify)\r\n                notifyListeners(this, change);\r\n            if (notifySpy && __DEV__)\r\n                spyReportEnd();\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    has(value) {\r\n        this.atom_.reportObserved();\r\n        return this.data_.has(this.dehanceValue_(value));\r\n    }\r\n    entries() {\r\n        let nextIndex = 0;\r\n        const keys = Array.from(this.keys());\r\n        const values = Array.from(this.values());\r\n        return makeIterable({\r\n            next() {\r\n                const index = nextIndex;\r\n                nextIndex += 1;\r\n                return index < values.length\r\n                    ? { value: [keys[index], values[index]], done: false }\r\n                    : { done: true };\r\n            }\r\n        });\r\n    }\r\n    keys() {\r\n        return this.values();\r\n    }\r\n    values() {\r\n        this.atom_.reportObserved();\r\n        const self = this;\r\n        let nextIndex = 0;\r\n        const observableValues = Array.from(this.data_.values());\r\n        return makeIterable({\r\n            next() {\r\n                return nextIndex < observableValues.length\r\n                    ? { value: self.dehanceValue_(observableValues[nextIndex++]), done: false }\r\n                    : { done: true };\r\n            }\r\n        });\r\n    }\r\n    replace(other) {\r\n        if (isObservableSet(other)) {\r\n            other = new Set(other);\r\n        }\r\n        transaction(() => {\r\n            if (Array.isArray(other)) {\r\n                this.clear();\r\n                other.forEach(value => this.add(value));\r\n            }\r\n            else if (isES6Set(other)) {\r\n                this.clear();\r\n                other.forEach(value => this.add(value));\r\n            }\r\n            else if (other !== null && other !== undefined) {\r\n                die(\"Cannot initialize set from \" + other);\r\n            }\r\n        });\r\n        return this;\r\n    }\r\n    observe_(listener, fireImmediately) {\r\n        // ... 'fireImmediately' could also be true?\r\n        if (__DEV__ && fireImmediately === true)\r\n            die(\"`observe` doesn't support fireImmediately=true in combination with sets.\");\r\n        return registerListener(this, listener);\r\n    }\r\n    intercept_(handler) {\r\n        return registerInterceptor(this, handler);\r\n    }\r\n    toJSON() {\r\n        return Array.from(this);\r\n    }\r\n    toString() {\r\n        return \"[object ObservableSet]\";\r\n    }\r\n    [Symbol.iterator]() {\r\n        return this.values();\r\n    }\r\n    get [Symbol.toStringTag]() {\r\n        return \"Set\";\r\n    }\r\n}\r\n// eslint-disable-next-line\r\nexport var isObservableSet = createInstanceofPredicate(\"ObservableSet\", ObservableSet);\r\n//# sourceMappingURL=observableset.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"observableset.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/types/observableset.ts\"],\"names\":[],\"mappings\":\"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\"}"}
