{"code":"import { isES6Map, isObservableArray, isObservableMap, isES6Set, isObservableSet, hasProp, isFunction, objectPrototype } from \"../internal\";\r\nconst toString = objectPrototype.toString;\r\nexport function deepEqual(a, b, depth = -1) {\r\n    return eq(a, b, depth);\r\n}\r\n// Copied from https://github.com/jashkenas/underscore/blob/5c237a7c682fb68fd5378203f0bf22dce1624854/underscore.js#L1186-L1289\r\n// Internal recursive comparison function for `isEqual`.\r\nfunction eq(a, b, depth, aStack, bStack) {\r\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n    if (a === b)\r\n        return a !== 0 || 1 / a === 1 / b;\r\n    // `null` or `undefined` only equal to itself (strict comparison).\r\n    if (a == null || b == null)\r\n        return false;\r\n    // `NaN`s are equivalent, but non-reflexive.\r\n    if (a !== a)\r\n        return b !== b;\r\n    // Exhaust primitive checks\r\n    const type = typeof a;\r\n    if (!isFunction(type) && type !== \"object\" && typeof b != \"object\")\r\n        return false;\r\n    // Compare `[[Class]]` names.\r\n    const className = toString.call(a);\r\n    if (className !== toString.call(b))\r\n        return false;\r\n    switch (className) {\r\n        // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n        case \"[object RegExp]\":\r\n        // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n        case \"[object String]\":\r\n            // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n            // equivalent to `new String(\"5\")`.\r\n            return \"\" + a === \"\" + b;\r\n        case \"[object Number]\":\r\n            // `NaN`s are equivalent, but non-reflexive.\r\n            // Object(NaN) is equivalent to NaN.\r\n            if (+a !== +a)\r\n                return +b !== +b;\r\n            // An `egal` comparison is performed for other numeric values.\r\n            return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n        case \"[object Date]\":\r\n        case \"[object Boolean]\":\r\n            // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n            // millisecond representations. Note that invalid dates with millisecond representations\r\n            // of `NaN` are not equivalent.\r\n            return +a === +b;\r\n        case \"[object Symbol]\":\r\n            return (typeof Symbol !== \"undefined\" && Symbol.valueOf.call(a) === Symbol.valueOf.call(b));\r\n        case \"[object Map]\":\r\n        case \"[object Set]\":\r\n            // Maps and Sets are unwrapped to arrays of entry-pairs, adding an incidental level.\r\n            // Hide this extra level by increasing the depth.\r\n            if (depth >= 0) {\r\n                depth++;\r\n            }\r\n            break;\r\n    }\r\n    // Unwrap any wrapped objects.\r\n    a = unwrap(a);\r\n    b = unwrap(b);\r\n    const areArrays = className === \"[object Array]\";\r\n    if (!areArrays) {\r\n        if (typeof a != \"object\" || typeof b != \"object\")\r\n            return false;\r\n        // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n        // from different frames are.\r\n        const aCtor = a.constructor, bCtor = b.constructor;\r\n        if (aCtor !== bCtor &&\r\n            !(isFunction(aCtor) &&\r\n                aCtor instanceof aCtor &&\r\n                isFunction(bCtor) &&\r\n                bCtor instanceof bCtor) &&\r\n            \"constructor\" in a &&\r\n            \"constructor\" in b) {\r\n            return false;\r\n        }\r\n    }\r\n    if (depth === 0) {\r\n        return false;\r\n    }\r\n    else if (depth < 0) {\r\n        depth = -1;\r\n    }\r\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n    // Initializing stack of traversed objects.\r\n    // It's done here since we only need them for objects and arrays comparison.\r\n    aStack = aStack || [];\r\n    bStack = bStack || [];\r\n    let length = aStack.length;\r\n    while (length--) {\r\n        // Linear search. Performance is inversely proportional to the number of\r\n        // unique nested structures.\r\n        if (aStack[length] === a)\r\n            return bStack[length] === b;\r\n    }\r\n    // Add the first object to the stack of traversed objects.\r\n    aStack.push(a);\r\n    bStack.push(b);\r\n    // Recursively compare objects and arrays.\r\n    if (areArrays) {\r\n        // Compare array lengths to determine if a deep comparison is necessary.\r\n        length = a.length;\r\n        if (length !== b.length)\r\n            return false;\r\n        // Deep compare the contents, ignoring non-numeric properties.\r\n        while (length--) {\r\n            if (!eq(a[length], b[length], depth - 1, aStack, bStack))\r\n                return false;\r\n        }\r\n    }\r\n    else {\r\n        // Deep compare objects.\r\n        const keys = Object.keys(a);\r\n        let key;\r\n        length = keys.length;\r\n        // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n        if (Object.keys(b).length !== length)\r\n            return false;\r\n        while (length--) {\r\n            // Deep compare each member\r\n            key = keys[length];\r\n            if (!(hasProp(b, key) && eq(a[key], b[key], depth - 1, aStack, bStack)))\r\n                return false;\r\n        }\r\n    }\r\n    // Remove the first object from the stack of traversed objects.\r\n    aStack.pop();\r\n    bStack.pop();\r\n    return true;\r\n}\r\nfunction unwrap(a) {\r\n    if (isObservableArray(a))\r\n        return a.slice();\r\n    if (isES6Map(a) || isObservableMap(a))\r\n        return Array.from(a.entries());\r\n    if (isES6Set(a) || isObservableSet(a))\r\n        return Array.from(a.entries());\r\n    return a;\r\n}\r\n//# sourceMappingURL=eq.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"eq.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/eq.ts\"],\"names\":[],\"mappings\":\"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\"}"}
