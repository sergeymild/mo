{"code":"import { $mobx, asObservableObject, endBatch, startBatch, collectStoredAnnotations, isPlainObject, isObservableObject, die, ownKeys, objectPrototype, inferredAnnotationsSymbol, extendObservable } from \"../internal\";\r\nexport function makeObservable(target, annotations, options) {\r\n    const adm = asObservableObject(target, options)[$mobx];\r\n    startBatch();\r\n    try {\r\n        // Default to decorators\r\n        annotations ??= collectStoredAnnotations(target);\r\n        // Annotate\r\n        ownKeys(annotations).forEach(key => adm.make_(key, annotations[key]));\r\n    }\r\n    finally {\r\n        endBatch();\r\n    }\r\n    return target;\r\n}\r\nexport function makeAutoObservable(target, overrides, options) {\r\n    if (__DEV__) {\r\n        if (!isPlainObject(target) && !isPlainObject(Object.getPrototypeOf(target)))\r\n            die(`'makeAutoObservable' can only be used for classes that don't have a superclass`);\r\n        if (isObservableObject(target))\r\n            die(`makeAutoObservable can only be used on objects not already made observable`);\r\n    }\r\n    // Optimization (avoids visiting protos)\r\n    // assumes that annotation.make_/.extend_ works the same for plain objects\r\n    if (isPlainObject(target)) {\r\n        return extendObservable(target, target, overrides, options);\r\n    }\r\n    const adm = asObservableObject(target, options)[$mobx];\r\n    startBatch();\r\n    try {\r\n        // Use cached inferred annotations if available (only in classes)\r\n        if (target[inferredAnnotationsSymbol]) {\r\n            target[inferredAnnotationsSymbol].forEach((value, key) => adm.make_(key, value));\r\n            // Overrides are not cached, unless `true`, see #2832\r\n            if (overrides) {\r\n                ownKeys(overrides).forEach(key => {\r\n                    const annotation = overrides[key];\r\n                    if (annotation !== true) {\r\n                        adm.make_(key, annotation);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            const ignoreKeys = { [$mobx]: 1, [inferredAnnotationsSymbol]: 1, constructor: 1 };\r\n            const make = key => {\r\n                if (ignoreKeys[key])\r\n                    return;\r\n                ignoreKeys[key] = 1;\r\n                adm.make_(key, \r\n                // must pass \"undefined\" for { key: undefined }\r\n                !overrides ? true : key in overrides ? overrides[key] : true);\r\n            };\r\n            let current = target;\r\n            while (current && current !== objectPrototype) {\r\n                ownKeys(current).forEach(make);\r\n                current = Object.getPrototypeOf(current);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        endBatch();\r\n    }\r\n    return target;\r\n}\r\n//# sourceMappingURL=makeObservable.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"makeObservable.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/api/makeObservable.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EACH,KAAK,EACL,kBAAkB,EAElB,QAAQ,EACR,UAAU,EAGV,wBAAwB,EACxB,aAAa,EACb,kBAAkB,EAClB,GAAG,EACH,OAAO,EACP,eAAe,EACf,yBAAyB,EACzB,gBAAgB,EACnB,MAAM,aAAa,CAAA;AASpB,MAAM,UAAU,cAAc,CAC1B,MAAS,EACT,WAAwD,EACxD,OAAiC;IAEjC,MAAM,GAAG,GAAmC,kBAAkB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,CAAA;IACtF,UAAU,EAAE,CAAA;IACZ,IAAI;QACA,wBAAwB;QACxB,WAAW,KAAK,wBAAwB,CAAC,MAAM,CAAC,CAAA;QAEhD,WAAW;QACX,OAAO,CAAC,WAAW,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,WAAY,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA;KACzE;YAAS;QACN,QAAQ,EAAE,CAAA;KACb;IACD,OAAO,MAAM,CAAA;AACjB,CAAC;AAED,MAAM,UAAU,kBAAkB,CAC9B,MAAS,EACT,SAAsD,EACtD,OAAiC;IAEjC,IAAI,OAAO,EAAE;QACT,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YACvE,GAAG,CAAC,gFAAgF,CAAC,CAAA;QACzF,IAAI,kBAAkB,CAAC,MAAM,CAAC;YAC1B,GAAG,CAAC,4EAA4E,CAAC,CAAA;KACxF;IAED,wCAAwC;IACxC,0EAA0E;IAC1E,IAAI,aAAa,CAAC,MAAM,CAAC,EAAE;QACvB,OAAO,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,OAAO,CAAC,CAAA;KAC9D;IAED,MAAM,GAAG,GAAmC,kBAAkB,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,KAAK,CAAC,CAAA;IACtF,UAAU,EAAE,CAAA;IACZ,IAAI;QACA,iEAAiE;QACjE,IAAI,MAAM,CAAC,yBAAyB,CAAC,EAAE;YACnC,MAAM,CAAC,yBAAyB,CAAC,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAA;YAChF,qDAAqD;YACrD,IAAI,SAAS,EAAE;gBACX,OAAO,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;oBAC7B,MAAM,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,CAAA;oBACjC,IAAI,UAAU,KAAK,IAAI,EAAE;wBACrB,GAAG,CAAC,KAAK,CAAC,GAAG,EAAE,UAAU,CAAC,CAAA;qBAC7B;gBACL,CAAC,CAAC,CAAA;aACL;SACJ;aAAM;YACH,MAAM,UAAU,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,yBAAyB,CAAC,EAAE,CAAC,EAAE,WAAW,EAAE,CAAC,EAAE,CAAA;YACjF,MAAM,IAAI,GAAG,GAAG,CAAC,EAAE;gBACf,IAAI,UAAU,CAAC,GAAG,CAAC;oBAAE,OAAM;gBAC3B,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA;gBACnB,GAAG,CAAC,KAAK,CACL,GAAG;gBACH,+CAA+C;gBAC/C,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAC/D,CAAA;YACL,CAAC,CAAA;YACD,IAAI,OAAO,GAAG,MAAM,CAAA;YACpB,OAAO,OAAO,IAAI,OAAO,KAAK,eAAe,EAAE;gBAC3C,OAAO,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAA;gBAC9B,OAAO,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAA;aAC3C;SACJ;KACJ;YAAS;QACN,QAAQ,EAAE,CAAA;KACb;IACD,OAAO,MAAM,CAAA;AACjB,CAAC\"}"}
