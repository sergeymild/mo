{"code":"import { $mobx, autorun, createAction, getNextId, die, allowStateChanges } from \"../internal\";\r\nexport function when(predicate, arg1, arg2) {\r\n    if (arguments.length === 1 || (arg1 && typeof arg1 === \"object\"))\r\n        return whenPromise(predicate, arg1);\r\n    return _when(predicate, arg1, arg2 || {});\r\n}\r\nfunction _when(predicate, effect, opts) {\r\n    let timeoutHandle;\r\n    if (typeof opts.timeout === \"number\") {\r\n        timeoutHandle = setTimeout(() => {\r\n            if (!disposer[$mobx].isDisposed_) {\r\n                disposer();\r\n                const error = new Error(\"WHEN_TIMEOUT\");\r\n                if (opts.onError)\r\n                    opts.onError(error);\r\n                else\r\n                    throw error;\r\n            }\r\n        }, opts.timeout);\r\n    }\r\n    opts.name = __DEV__ ? opts.name || \"When@\" + getNextId() : \"When\";\r\n    const effectAction = createAction(__DEV__ ? opts.name + \"-effect\" : \"When-effect\", effect);\r\n    // eslint-disable-next-line\r\n    var disposer = autorun(r => {\r\n        // predicate should not change state\r\n        let cond = allowStateChanges(false, predicate);\r\n        if (cond) {\r\n            r.dispose();\r\n            if (timeoutHandle)\r\n                clearTimeout(timeoutHandle);\r\n            effectAction();\r\n        }\r\n    }, opts);\r\n    return disposer;\r\n}\r\nfunction whenPromise(predicate, opts) {\r\n    if (__DEV__ && opts && opts.onError)\r\n        return die(`the options 'onError' and 'promise' cannot be combined`);\r\n    let cancel;\r\n    const res = new Promise((resolve, reject) => {\r\n        let disposer = _when(predicate, resolve, { ...opts, onError: reject });\r\n        cancel = () => {\r\n            disposer();\r\n            reject(\"WHEN_CANCELLED\");\r\n        };\r\n    });\r\n    res.cancel = cancel;\r\n    return res;\r\n}\r\n//# sourceMappingURL=when.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"when.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/api/when.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EACH,KAAK,EAGL,OAAO,EACP,YAAY,EACZ,SAAS,EACT,GAAG,EACH,iBAAiB,EACpB,MAAM,aAAa,CAAA;AAiBpB,MAAM,UAAU,IAAI,CAAC,SAAc,EAAE,IAAU,EAAE,IAAU;IACvD,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,IAAI,KAAK,QAAQ,CAAC;QAC5D,OAAO,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,CAAA;IACvC,OAAO,KAAK,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,IAAI,EAAE,CAAC,CAAA;AAC7C,CAAC;AAED,SAAS,KAAK,CAAC,SAAwB,EAAE,MAAc,EAAE,IAAkB;IACvE,IAAI,aAAkB,CAAA;IACtB,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,QAAQ,EAAE;QAClC,aAAa,GAAG,UAAU,CAAC,GAAG,EAAE;YAC5B,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,WAAW,EAAE;gBAC9B,QAAQ,EAAE,CAAA;gBACV,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,cAAc,CAAC,CAAA;gBACvC,IAAI,IAAI,CAAC,OAAO;oBAAE,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;;oBAChC,MAAM,KAAK,CAAA;aACnB;QACL,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAA;KACnB;IAED,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,IAAI,OAAO,GAAG,SAAS,EAAE,CAAC,CAAC,CAAC,MAAM,CAAA;IACjE,MAAM,YAAY,GAAG,YAAY,CAC7B,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,aAAa,EAC/C,MAAkB,CACrB,CAAA;IACD,2BAA2B;IAC3B,IAAI,QAAQ,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE;QACvB,oCAAoC;QACpC,IAAI,IAAI,GAAG,iBAAiB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAA;QAC9C,IAAI,IAAI,EAAE;YACN,CAAC,CAAC,OAAO,EAAE,CAAA;YACX,IAAI,aAAa;gBAAE,YAAY,CAAC,aAAa,CAAC,CAAA;YAC9C,YAAY,EAAE,CAAA;SACjB;IACL,CAAC,EAAE,IAAI,CAAC,CAAA;IACR,OAAO,QAAQ,CAAA;AACnB,CAAC;AAED,SAAS,WAAW,CAChB,SAAwB,EACxB,IAAmB;IAEnB,IAAI,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO;QAC/B,OAAO,GAAG,CAAC,wDAAwD,CAAC,CAAA;IACxE,IAAI,MAAM,CAAA;IACV,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACxC,IAAI,QAAQ,GAAG,KAAK,CAAC,SAAS,EAAE,OAAO,EAAE,EAAE,GAAG,IAAI,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,CAAA;QACtE,MAAM,GAAG,GAAG,EAAE;YACV,QAAQ,EAAE,CAAA;YACV,MAAM,CAAC,gBAAgB,CAAC,CAAA;QAC5B,CAAC,CAAA;IACL,CAAC,CAAC,CACD;IAAC,GAAW,CAAC,MAAM,GAAG,MAAM,CAAA;IAC7B,OAAO,GAAU,CAAA;AACrB,CAAC\"}","dts":{"name":"/Users/sergeigolishnikov/development/web/mobx/packages/mobx/api/when.d.ts","writeByteOrderMark":false,"text":"import { IReactionDisposer, Lambda } from \"../internal\";\r\nexport interface IWhenOptions {\r\n    name?: string;\r\n    timeout?: number;\r\n    onError?: (error: any) => void;\r\n}\r\nexport declare function when(predicate: () => boolean, opts?: IWhenOptions): Promise<void> & {\r\n    cancel(): void;\r\n};\r\nexport declare function when(predicate: () => boolean, effect: Lambda, opts?: IWhenOptions): IReactionDisposer;\r\n"}}
