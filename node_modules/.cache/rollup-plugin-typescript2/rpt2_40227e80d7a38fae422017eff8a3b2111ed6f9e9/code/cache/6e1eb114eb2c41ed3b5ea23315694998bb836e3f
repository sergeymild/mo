{"code":"import { $mobx, Atom, EMPTY_ARRAY, addHiddenFinalProp, checkIfStateModificationsAreAllowed, createInstanceofPredicate, getNextId, hasInterceptors, hasListeners, interceptChange, isObject, isSpyEnabled, notifyListeners, registerInterceptor, registerListener, spyReportEnd, spyReportStart, allowStateChangesStart, allowStateChangesEnd, assertProxies, reserveArrayBuffer, hasProp, die, globalState } from \"../internal\";\r\nconst SPLICE = \"splice\";\r\nexport const UPDATE = \"update\";\r\nexport const MAX_SPLICE_SIZE = 10000; // See e.g. https://github.com/mobxjs/mobx/issues/859\r\nconst arrayTraps = {\r\n    get(target, name) {\r\n        const adm = target[$mobx];\r\n        if (name === $mobx)\r\n            return adm;\r\n        if (name === \"length\")\r\n            return adm.getArrayLength_();\r\n        if (typeof name === \"string\" && !isNaN(name)) {\r\n            return adm.get_(parseInt(name));\r\n        }\r\n        if (hasProp(arrayExtensions, name)) {\r\n            return arrayExtensions[name];\r\n        }\r\n        return target[name];\r\n    },\r\n    set(target, name, value) {\r\n        const adm = target[$mobx];\r\n        if (name === \"length\") {\r\n            adm.setArrayLength_(value);\r\n        }\r\n        if (typeof name === \"symbol\" || isNaN(name)) {\r\n            target[name] = value;\r\n        }\r\n        else {\r\n            // numeric string\r\n            adm.set_(parseInt(name), value);\r\n        }\r\n        return true;\r\n    },\r\n    preventExtensions() {\r\n        die(15);\r\n    }\r\n};\r\nexport class ObservableArrayAdministration {\r\n    owned_;\r\n    legacyMode_;\r\n    atom_;\r\n    values_ = []; // this is the prop that gets proxied, so can't replace it!\r\n    interceptors_;\r\n    changeListeners_;\r\n    enhancer_;\r\n    dehancer;\r\n    proxy_;\r\n    lastKnownLength_ = 0;\r\n    constructor(name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\", enhancer, owned_, legacyMode_) {\r\n        this.owned_ = owned_;\r\n        this.legacyMode_ = legacyMode_;\r\n        this.atom_ = new Atom(name);\r\n        this.enhancer_ = (newV, oldV) => enhancer(newV, oldV, __DEV__ ? name + \"[..]\" : \"ObservableArray[..]\");\r\n    }\r\n    dehanceValue_(value) {\r\n        if (this.dehancer !== undefined)\r\n            return this.dehancer(value);\r\n        return value;\r\n    }\r\n    dehanceValues_(values) {\r\n        if (this.dehancer !== undefined && values.length > 0)\r\n            return values.map(this.dehancer);\r\n        return values;\r\n    }\r\n    intercept_(handler) {\r\n        return registerInterceptor(this, handler);\r\n    }\r\n    observe_(listener, fireImmediately = false) {\r\n        if (fireImmediately) {\r\n            listener({\r\n                observableKind: \"array\",\r\n                object: this.proxy_,\r\n                debugObjectName: this.atom_.name_,\r\n                type: \"splice\",\r\n                index: 0,\r\n                added: this.values_.slice(),\r\n                addedCount: this.values_.length,\r\n                removed: [],\r\n                removedCount: 0\r\n            });\r\n        }\r\n        return registerListener(this, listener);\r\n    }\r\n    getArrayLength_() {\r\n        this.atom_.reportObserved();\r\n        return this.values_.length;\r\n    }\r\n    setArrayLength_(newLength) {\r\n        if (typeof newLength !== \"number\" || newLength < 0)\r\n            die(\"Out of range: \" + newLength);\r\n        let currentLength = this.values_.length;\r\n        if (newLength === currentLength)\r\n            return;\r\n        else if (newLength > currentLength) {\r\n            const newItems = new Array(newLength - currentLength);\r\n            for (let i = 0; i < newLength - currentLength; i++)\r\n                newItems[i] = undefined; // No Array.fill everywhere...\r\n            this.spliceWithArray_(currentLength, 0, newItems);\r\n        }\r\n        else\r\n            this.spliceWithArray_(newLength, currentLength - newLength);\r\n    }\r\n    updateArrayLength_(oldLength, delta) {\r\n        if (oldLength !== this.lastKnownLength_)\r\n            die(16);\r\n        this.lastKnownLength_ += delta;\r\n        if (this.legacyMode_ && delta > 0)\r\n            reserveArrayBuffer(oldLength + delta + 1);\r\n    }\r\n    spliceWithArray_(index, deleteCount, newItems) {\r\n        checkIfStateModificationsAreAllowed(this.atom_);\r\n        const length = this.values_.length;\r\n        if (index === undefined)\r\n            index = 0;\r\n        else if (index > length)\r\n            index = length;\r\n        else if (index < 0)\r\n            index = Math.max(0, length + index);\r\n        if (arguments.length === 1)\r\n            deleteCount = length - index;\r\n        else if (deleteCount === undefined || deleteCount === null)\r\n            deleteCount = 0;\r\n        else\r\n            deleteCount = Math.max(0, Math.min(deleteCount, length - index));\r\n        if (newItems === undefined)\r\n            newItems = EMPTY_ARRAY;\r\n        if (hasInterceptors(this)) {\r\n            const change = interceptChange(this, {\r\n                object: this.proxy_,\r\n                type: SPLICE,\r\n                index,\r\n                removedCount: deleteCount,\r\n                added: newItems\r\n            });\r\n            if (!change)\r\n                return EMPTY_ARRAY;\r\n            deleteCount = change.removedCount;\r\n            newItems = change.added;\r\n        }\r\n        newItems =\r\n            newItems.length === 0 ? newItems : newItems.map(v => this.enhancer_(v, undefined));\r\n        if (this.legacyMode_ || __DEV__) {\r\n            const lengthDelta = newItems.length - deleteCount;\r\n            this.updateArrayLength_(length, lengthDelta); // checks if internal array wasn't modified\r\n        }\r\n        const res = this.spliceItemsIntoValues_(index, deleteCount, newItems);\r\n        if (deleteCount !== 0 || newItems.length !== 0)\r\n            this.notifyArraySplice_(index, newItems, res);\r\n        return this.dehanceValues_(res);\r\n    }\r\n    spliceItemsIntoValues_(index, deleteCount, newItems) {\r\n        if (newItems.length < MAX_SPLICE_SIZE) {\r\n            return this.values_.splice(index, deleteCount, ...newItems);\r\n        }\r\n        else {\r\n            const res = this.values_.slice(index, index + deleteCount);\r\n            let oldItems = this.values_.slice(index + deleteCount);\r\n            this.values_.length = index + newItems.length - deleteCount;\r\n            for (let i = 0; i < newItems.length; i++)\r\n                this.values_[index + i] = newItems[i];\r\n            for (let i = 0; i < oldItems.length; i++)\r\n                this.values_[index + newItems.length + i] = oldItems[i];\r\n            return res;\r\n        }\r\n    }\r\n    notifyArrayChildUpdate_(index, newValue, oldValue) {\r\n        const notifySpy = !this.owned_ && isSpyEnabled();\r\n        const notify = hasListeners(this);\r\n        const change = notify || notifySpy\r\n            ? {\r\n                observableKind: \"array\",\r\n                object: this.proxy_,\r\n                type: UPDATE,\r\n                debugObjectName: this.atom_.name_,\r\n                index,\r\n                newValue,\r\n                oldValue\r\n            }\r\n            : null;\r\n        // The reason why this is on right hand side here (and not above), is this way the uglifier will drop it, but it won't\r\n        // cause any runtime overhead in development mode without NODE_ENV set, unless spying is enabled\r\n        if (__DEV__ && notifySpy)\r\n            spyReportStart(change);\r\n        this.atom_.reportChanged();\r\n        if (notify)\r\n            notifyListeners(this, change);\r\n        if (__DEV__ && notifySpy)\r\n            spyReportEnd();\r\n    }\r\n    notifyArraySplice_(index, added, removed) {\r\n        const notifySpy = !this.owned_ && isSpyEnabled();\r\n        const notify = hasListeners(this);\r\n        const change = notify || notifySpy\r\n            ? {\r\n                observableKind: \"array\",\r\n                object: this.proxy_,\r\n                debugObjectName: this.atom_.name_,\r\n                type: SPLICE,\r\n                index,\r\n                removed,\r\n                added,\r\n                removedCount: removed.length,\r\n                addedCount: added.length\r\n            }\r\n            : null;\r\n        if (__DEV__ && notifySpy)\r\n            spyReportStart(change);\r\n        this.atom_.reportChanged();\r\n        // conform: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/observe\r\n        if (notify)\r\n            notifyListeners(this, change);\r\n        if (__DEV__ && notifySpy)\r\n            spyReportEnd();\r\n    }\r\n    get_(index) {\r\n        if (index < this.values_.length) {\r\n            this.atom_.reportObserved();\r\n            return this.dehanceValue_(this.values_[index]);\r\n        }\r\n        console.warn(__DEV__\r\n            ? `[mobx] Out of bounds read: ${index}`\r\n            : `[mobx.array] Attempt to read an array index (${index}) that is out of bounds (${this.values_.length}). Please check length first. Out of bound indices will not be tracked by MobX`);\r\n    }\r\n    set_(index, newValue) {\r\n        const values = this.values_;\r\n        if (index < values.length) {\r\n            // update at index in range\r\n            checkIfStateModificationsAreAllowed(this.atom_);\r\n            const oldValue = values[index];\r\n            if (hasInterceptors(this)) {\r\n                const change = interceptChange(this, {\r\n                    type: UPDATE,\r\n                    object: this.proxy_,\r\n                    index,\r\n                    newValue\r\n                });\r\n                if (!change)\r\n                    return;\r\n                newValue = change.newValue;\r\n            }\r\n            newValue = this.enhancer_(newValue, oldValue);\r\n            const changed = newValue !== oldValue;\r\n            if (changed) {\r\n                values[index] = newValue;\r\n                this.notifyArrayChildUpdate_(index, newValue, oldValue);\r\n            }\r\n        }\r\n        else if (index === values.length) {\r\n            // add a new item\r\n            this.spliceWithArray_(index, 0, [newValue]);\r\n        }\r\n        else {\r\n            // out of bounds\r\n            die(17, index, values.length);\r\n        }\r\n    }\r\n}\r\nexport function createObservableArray(initialValues, enhancer, name = __DEV__ ? \"ObservableArray@\" + getNextId() : \"ObservableArray\", owned = false) {\r\n    assertProxies();\r\n    const adm = new ObservableArrayAdministration(name, enhancer, owned, false);\r\n    addHiddenFinalProp(adm.values_, $mobx, adm);\r\n    const proxy = new Proxy(adm.values_, arrayTraps);\r\n    adm.proxy_ = proxy;\r\n    if (initialValues && initialValues.length) {\r\n        const prev = allowStateChangesStart(true);\r\n        adm.spliceWithArray_(0, 0, initialValues);\r\n        allowStateChangesEnd(prev);\r\n    }\r\n    return proxy;\r\n}\r\n// eslint-disable-next-line\r\nexport var arrayExtensions = {\r\n    clear() {\r\n        return this.splice(0);\r\n    },\r\n    replace(newItems) {\r\n        const adm = this[$mobx];\r\n        return adm.spliceWithArray_(0, adm.values_.length, newItems);\r\n    },\r\n    // Used by JSON.stringify\r\n    toJSON() {\r\n        return this.slice();\r\n    },\r\n    /*\r\n     * functions that do alter the internal structure of the array, (based on lib.es6.d.ts)\r\n     * since these functions alter the inner structure of the array, the have side effects.\r\n     * Because the have side effects, they should not be used in computed function,\r\n     * and for that reason the do not call dependencyState.notifyObserved\r\n     */\r\n    splice(index, deleteCount, ...newItems) {\r\n        const adm = this[$mobx];\r\n        switch (arguments.length) {\r\n            case 0:\r\n                return [];\r\n            case 1:\r\n                return adm.spliceWithArray_(index);\r\n            case 2:\r\n                return adm.spliceWithArray_(index, deleteCount);\r\n        }\r\n        return adm.spliceWithArray_(index, deleteCount, newItems);\r\n    },\r\n    spliceWithArray(index, deleteCount, newItems) {\r\n        return this[$mobx].spliceWithArray_(index, deleteCount, newItems);\r\n    },\r\n    push(...items) {\r\n        const adm = this[$mobx];\r\n        adm.spliceWithArray_(adm.values_.length, 0, items);\r\n        return adm.values_.length;\r\n    },\r\n    pop() {\r\n        return this.splice(Math.max(this[$mobx].values_.length - 1, 0), 1)[0];\r\n    },\r\n    shift() {\r\n        return this.splice(0, 1)[0];\r\n    },\r\n    unshift(...items) {\r\n        const adm = this[$mobx];\r\n        adm.spliceWithArray_(0, 0, items);\r\n        return adm.values_.length;\r\n    },\r\n    reverse() {\r\n        // reverse by default mutates in place before returning the result\r\n        // which makes it both a 'derivation' and a 'mutation'.\r\n        if (globalState.trackingDerivation) {\r\n            die(37, \"reverse\");\r\n        }\r\n        this.replace(this.slice().reverse());\r\n        return this;\r\n    },\r\n    sort() {\r\n        // sort by default mutates in place before returning the result\r\n        // which goes against all good practices. Let's not change the array in place!\r\n        if (globalState.trackingDerivation) {\r\n            die(37, \"sort\");\r\n        }\r\n        const copy = this.slice();\r\n        copy.sort.apply(copy, arguments);\r\n        this.replace(copy);\r\n        return this;\r\n    },\r\n    remove(value) {\r\n        const adm = this[$mobx];\r\n        const idx = adm.dehanceValues_(adm.values_).indexOf(value);\r\n        if (idx > -1) {\r\n            this.splice(idx, 1);\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n};\r\n/**\r\n * Wrap function from prototype\r\n * Without this, everything works as well, but this works\r\n * faster as everything works on unproxied values\r\n */\r\naddArrayExtension(\"concat\", simpleFunc);\r\naddArrayExtension(\"flat\", simpleFunc);\r\naddArrayExtension(\"includes\", simpleFunc);\r\naddArrayExtension(\"indexOf\", simpleFunc);\r\naddArrayExtension(\"join\", simpleFunc);\r\naddArrayExtension(\"lastIndexOf\", simpleFunc);\r\naddArrayExtension(\"slice\", simpleFunc);\r\naddArrayExtension(\"toString\", simpleFunc);\r\naddArrayExtension(\"toLocaleString\", simpleFunc);\r\n// map\r\naddArrayExtension(\"every\", mapLikeFunc);\r\naddArrayExtension(\"filter\", mapLikeFunc);\r\naddArrayExtension(\"find\", mapLikeFunc);\r\naddArrayExtension(\"findIndex\", mapLikeFunc);\r\naddArrayExtension(\"flatMap\", mapLikeFunc);\r\naddArrayExtension(\"forEach\", mapLikeFunc);\r\naddArrayExtension(\"map\", mapLikeFunc);\r\naddArrayExtension(\"some\", mapLikeFunc);\r\n// reduce\r\naddArrayExtension(\"reduce\", reduceLikeFunc);\r\naddArrayExtension(\"reduceRight\", reduceLikeFunc);\r\nfunction addArrayExtension(funcName, funcFactory) {\r\n    if (typeof Array.prototype[funcName] === \"function\") {\r\n        arrayExtensions[funcName] = funcFactory(funcName);\r\n    }\r\n}\r\n// Report and delegate to dehanced array\r\nfunction simpleFunc(funcName) {\r\n    return function () {\r\n        const adm = this[$mobx];\r\n        adm.atom_.reportObserved();\r\n        const dehancedValues = adm.dehanceValues_(adm.values_);\r\n        return dehancedValues[funcName].apply(dehancedValues, arguments);\r\n    };\r\n}\r\n// Make sure callbacks recieve correct array arg #2326\r\nfunction mapLikeFunc(funcName) {\r\n    return function (callback, thisArg) {\r\n        const adm = this[$mobx];\r\n        adm.atom_.reportObserved();\r\n        const dehancedValues = adm.dehanceValues_(adm.values_);\r\n        return dehancedValues[funcName]((element, index) => {\r\n            return callback.call(thisArg, element, index, this);\r\n        });\r\n    };\r\n}\r\n// Make sure callbacks recieve correct array arg #2326\r\nfunction reduceLikeFunc(funcName) {\r\n    return function () {\r\n        const adm = this[$mobx];\r\n        adm.atom_.reportObserved();\r\n        const dehancedValues = adm.dehanceValues_(adm.values_);\r\n        // #2432 - reduce behavior depends on arguments.length\r\n        const callback = arguments[0];\r\n        arguments[0] = (accumulator, currentValue, index) => {\r\n            return callback(accumulator, currentValue, index, this);\r\n        };\r\n        return dehancedValues[funcName].apply(dehancedValues, arguments);\r\n    };\r\n}\r\nconst isObservableArrayAdministration = createInstanceofPredicate(\"ObservableArrayAdministration\", ObservableArrayAdministration);\r\nexport function isObservableArray(thing) {\r\n    return isObject(thing) && isObservableArrayAdministration(thing[$mobx]);\r\n}\r\n//# sourceMappingURL=observablearray.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"observablearray.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/types/observablearray.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sergeigolishnikov/development/web/mobx/packages/mobx/types/observablearray.d.ts","writeByteOrderMark":false,"text":"import { IAtom, IEnhancer, IInterceptable, IInterceptor, IListenable, Lambda } from \"../internal\";\r\nexport declare const UPDATE = \"update\";\r\nexport declare const MAX_SPLICE_SIZE = 10000;\r\nexport interface IObservableArray<T = any> extends Array<T> {\r\n    spliceWithArray(index: number, deleteCount?: number, newItems?: T[]): T[];\r\n    clear(): T[];\r\n    replace(newItems: T[]): T[];\r\n    remove(value: T): boolean;\r\n    toJSON(): T[];\r\n}\r\ninterface IArrayBaseChange<T> {\r\n    object: IObservableArray<T>;\r\n    observableKind: \"array\";\r\n    debugObjectName: string;\r\n    index: number;\r\n}\r\nexport declare type IArrayDidChange<T = any> = IArrayUpdate<T> | IArraySplice<T>;\r\nexport interface IArrayUpdate<T = any> extends IArrayBaseChange<T> {\r\n    type: \"update\";\r\n    newValue: T;\r\n    oldValue: T;\r\n}\r\nexport interface IArraySplice<T = any> extends IArrayBaseChange<T> {\r\n    type: \"splice\";\r\n    added: T[];\r\n    addedCount: number;\r\n    removed: T[];\r\n    removedCount: number;\r\n}\r\nexport interface IArrayWillChange<T = any> {\r\n    object: IObservableArray<T>;\r\n    index: number;\r\n    type: \"update\";\r\n    newValue: T;\r\n}\r\nexport interface IArrayWillSplice<T = any> {\r\n    object: IObservableArray<T>;\r\n    index: number;\r\n    type: \"splice\";\r\n    added: T[];\r\n    removedCount: number;\r\n}\r\nexport declare class ObservableArrayAdministration implements IInterceptable<IArrayWillChange<any> | IArrayWillSplice<any>>, IListenable {\r\n    owned_: boolean;\r\n    legacyMode_: boolean;\r\n    atom_: IAtom;\r\n    readonly values_: any[];\r\n    interceptors_: any;\r\n    changeListeners_: any;\r\n    enhancer_: (newV: any, oldV: any | undefined) => any;\r\n    dehancer: any;\r\n    proxy_: IObservableArray<any>;\r\n    lastKnownLength_: number;\r\n    constructor(name: string | undefined, enhancer: IEnhancer<any>, owned_: boolean, legacyMode_: boolean);\r\n    dehanceValue_(value: any): any;\r\n    dehanceValues_(values: any[]): any[];\r\n    intercept_(handler: IInterceptor<IArrayWillChange<any> | IArrayWillSplice<any>>): Lambda;\r\n    observe_(listener: (changeData: IArrayDidChange<any>) => void, fireImmediately?: boolean): Lambda;\r\n    getArrayLength_(): number;\r\n    setArrayLength_(newLength: number): void;\r\n    updateArrayLength_(oldLength: number, delta: number): void;\r\n    spliceWithArray_(index: number, deleteCount?: number, newItems?: any[]): any[];\r\n    spliceItemsIntoValues_(index: number, deleteCount: number, newItems: any[]): any[];\r\n    notifyArrayChildUpdate_(index: number, newValue: any, oldValue: any): void;\r\n    notifyArraySplice_(index: number, added: any[], removed: any[]): void;\r\n    get_(index: number): any | undefined;\r\n    set_(index: number, newValue: any): void;\r\n}\r\nexport declare function createObservableArray<T>(initialValues: T[] | undefined, enhancer: IEnhancer<T>, name?: string, owned?: boolean): IObservableArray<T>;\r\nexport declare var arrayExtensions: {\r\n    clear(): any[];\r\n    replace(newItems: any[]): any[];\r\n    toJSON(): any[];\r\n    splice(index: number, deleteCount?: number | undefined, ...newItems: any[]): any[];\r\n    spliceWithArray(index: number, deleteCount?: number | undefined, newItems?: any[] | undefined): any[];\r\n    push(...items: any[]): number;\r\n    pop(): any;\r\n    shift(): any;\r\n    unshift(...items: any[]): number;\r\n    reverse(): any[];\r\n    sort(): any[];\r\n    remove(value: any): boolean;\r\n};\r\nexport declare function isObservableArray(thing: any): thing is IObservableArray<any>;\r\nexport {};\r\n"}}
