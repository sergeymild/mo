{"code":"import { $mobx, isAtom, isComputedValue, isObservableArray, isObservableMap, isObservableObject, isReaction, die, isStringish } from \"../internal\";\r\nfunction _isObservable(value, property) {\r\n    if (!value)\r\n        return false;\r\n    if (property !== undefined) {\r\n        if (__DEV__ && (isObservableMap(value) || isObservableArray(value)))\r\n            return die(\"isObservable(object, propertyName) is not supported for arrays and maps. Use map.has or array.length instead.\");\r\n        if (isObservableObject(value)) {\r\n            return value[$mobx].values_.has(property);\r\n        }\r\n        return false;\r\n    }\r\n    // For first check, see #701\r\n    return (isObservableObject(value) ||\r\n        !!value[$mobx] ||\r\n        isAtom(value) ||\r\n        isReaction(value) ||\r\n        isComputedValue(value));\r\n}\r\nexport function isObservable(value) {\r\n    if (__DEV__ && arguments.length !== 1)\r\n        die(`isObservable expects only 1 argument. Use isObservableProp to inspect the observability of a property`);\r\n    return _isObservable(value);\r\n}\r\nexport function isObservableProp(value, propName) {\r\n    if (__DEV__ && !isStringish(propName))\r\n        return die(`expected a property name as second argument`);\r\n    return _isObservable(value, propName);\r\n}\r\n//# sourceMappingURL=isobservable.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"isobservable.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/api/isobservable.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EACH,KAAK,EACL,MAAM,EACN,eAAe,EACf,iBAAiB,EACjB,eAAe,EACf,kBAAkB,EAClB,UAAU,EACV,GAAG,EACH,WAAW,EACd,MAAM,aAAa,CAAA;AAEpB,SAAS,aAAa,CAAC,KAAK,EAAE,QAAsB;IAChD,IAAI,CAAC,KAAK;QAAE,OAAO,KAAK,CAAA;IACxB,IAAI,QAAQ,KAAK,SAAS,EAAE;QACxB,IAAI,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,iBAAiB,CAAC,KAAK,CAAC,CAAC;YAC/D,OAAO,GAAG,CACN,+GAA+G,CAClH,CAAA;QACL,IAAI,kBAAkB,CAAC,KAAK,CAAC,EAAE;YAC3B,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;SAC5C;QACD,OAAO,KAAK,CAAA;KACf;IACD,4BAA4B;IAC5B,OAAO,CACH,kBAAkB,CAAC,KAAK,CAAC;QACzB,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;QACd,MAAM,CAAC,KAAK,CAAC;QACb,UAAU,CAAC,KAAK,CAAC;QACjB,eAAe,CAAC,KAAK,CAAC,CACzB,CAAA;AACL,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,KAAU;IACnC,IAAI,OAAO,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC;QACjC,GAAG,CACC,uGAAuG,CAC1G,CAAA;IACL,OAAO,aAAa,CAAC,KAAK,CAAC,CAAA;AAC/B,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,KAAU,EAAE,QAAqB;IAC9D,IAAI,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAAE,OAAO,GAAG,CAAC,6CAA6C,CAAC,CAAA;IAChG,OAAO,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAA;AACzC,CAAC\"}","dts":{"name":"/Users/sergeigolishnikov/development/web/mobx/packages/mobx/api/isobservable.d.ts","writeByteOrderMark":false,"text":"export declare function isObservable(value: any): boolean;\r\nexport declare function isObservableProp(value: any, propName: PropertyKey): boolean;\r\n"}}
