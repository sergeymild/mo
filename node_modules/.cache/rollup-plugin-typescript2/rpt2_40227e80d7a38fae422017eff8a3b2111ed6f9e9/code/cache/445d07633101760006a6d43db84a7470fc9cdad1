{"code":"import { getAtom, isFunction } from \"../internal\";\r\nconst ON_BECOME_OBSERVED = \"onBO\";\r\nconst ON_BECOME_UNOBSERVED = \"onBUO\";\r\nexport function onBecomeObserved(thing, arg2, arg3) {\r\n    return interceptHook(ON_BECOME_OBSERVED, thing, arg2, arg3);\r\n}\r\nexport function onBecomeUnobserved(thing, arg2, arg3) {\r\n    return interceptHook(ON_BECOME_UNOBSERVED, thing, arg2, arg3);\r\n}\r\nfunction interceptHook(hook, thing, arg2, arg3) {\r\n    const atom = typeof arg3 === \"function\" ? getAtom(thing, arg2) : getAtom(thing);\r\n    const cb = isFunction(arg3) ? arg3 : arg2;\r\n    const listenersKey = `${hook}L`;\r\n    if (atom[listenersKey]) {\r\n        atom[listenersKey].add(cb);\r\n    }\r\n    else {\r\n        atom[listenersKey] = new Set([cb]);\r\n    }\r\n    return function () {\r\n        const hookListeners = atom[listenersKey];\r\n        if (hookListeners) {\r\n            hookListeners.delete(cb);\r\n            if (hookListeners.size === 0) {\r\n                delete atom[listenersKey];\r\n            }\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=become-observed.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"become-observed.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/api/become-observed.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAMH,OAAO,EAEP,UAAU,EAEb,MAAM,aAAa,CAAA;AAEpB,MAAM,kBAAkB,GAAG,MAAM,CAAA;AACjC,MAAM,oBAAoB,GAAG,OAAO,CAAA;AAiBpC,MAAM,UAAU,gBAAgB,CAAC,KAAK,EAAE,IAAI,EAAE,IAAK;IAC/C,OAAO,aAAa,CAAC,kBAAkB,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;AAC/D,CAAC;AAiBD,MAAM,UAAU,kBAAkB,CAAC,KAAK,EAAE,IAAI,EAAE,IAAK;IACjD,OAAO,aAAa,CAAC,oBAAoB,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,CAAA;AACjE,CAAC;AAED,SAAS,aAAa,CAAC,IAAsB,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI;IAC5D,MAAM,IAAI,GACN,OAAO,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAE,OAAO,CAAC,KAAK,CAAS,CAAA;IAC/E,MAAM,EAAE,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAA;IACzC,MAAM,YAAY,GAAG,GAAG,IAAI,GAAyB,CAAA;IAErD,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;QACpB,IAAI,CAAC,YAAY,CAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAA;KAC9B;SAAM;QACH,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,GAAG,CAAS,CAAC,EAAE,CAAC,CAAC,CAAA;KAC7C;IAED,OAAO;QACH,MAAM,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,CAAA;QACxC,IAAI,aAAa,EAAE;YACf,aAAa,CAAC,MAAM,CAAC,EAAE,CAAC,CAAA;YACxB,IAAI,aAAa,CAAC,IAAI,KAAK,CAAC,EAAE;gBAC1B,OAAO,IAAI,CAAC,YAAY,CAAC,CAAA;aAC5B;SACJ;IACL,CAAC,CAAA;AACL,CAAC\"}","dts":{"name":"/Users/sergeigolishnikov/development/web/mobx/packages/mobx/api/become-observed.d.ts","writeByteOrderMark":false,"text":"import { IComputedValue, IObservable, IObservableArray, Lambda, ObservableMap, ObservableSet, IObservableValue } from \"../internal\";\r\nexport declare function onBecomeObserved(value: IObservable | IComputedValue<any> | IObservableArray<any> | ObservableMap<any, any> | ObservableSet<any> | IObservableValue<any>, listener: Lambda): Lambda;\r\nexport declare function onBecomeObserved<K, V = any>(value: ObservableMap<K, V> | Object, property: K, listener: Lambda): Lambda;\r\nexport declare function onBecomeUnobserved(value: IObservable | IComputedValue<any> | IObservableArray<any> | ObservableMap<any, any> | ObservableSet<any> | IObservableValue<any>, listener: Lambda): Lambda;\r\nexport declare function onBecomeUnobserved<K, V = any>(value: ObservableMap<K, V> | Object, property: K, listener: Lambda): Lambda;\r\n"}}
