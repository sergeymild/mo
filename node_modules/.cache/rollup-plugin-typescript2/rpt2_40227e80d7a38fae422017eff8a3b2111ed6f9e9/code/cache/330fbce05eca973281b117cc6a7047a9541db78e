{"code":"import { EMPTY_OBJECT, Reaction, action, comparer, getNextId, isAction, isFunction, isPlainObject, die, allowStateChanges } from \"../internal\";\r\n/**\r\n * Creates a named reactive view and keeps it alive, so that the view is always\r\n * updated if one of the dependencies changes, even when the view is not further used by something else.\r\n * @param view The reactive view\r\n * @returns disposer function, which can be used to stop the view from being updated in the future.\r\n */\r\nexport function autorun(view, opts = EMPTY_OBJECT) {\r\n    if (__DEV__) {\r\n        if (!isFunction(view))\r\n            die(\"Autorun expects a function as first argument\");\r\n        if (isAction(view))\r\n            die(\"Autorun does not accept actions since actions are untrackable\");\r\n    }\r\n    const name = opts?.name ?? (__DEV__ ? view.name || \"Autorun@\" + getNextId() : \"Autorun\");\r\n    const runSync = !opts.scheduler && !opts.delay;\r\n    let reaction;\r\n    if (runSync) {\r\n        // normal autorun\r\n        reaction = new Reaction(name, function () {\r\n            this.track(reactionRunner);\r\n        }, opts.onError, opts.requiresObservable);\r\n    }\r\n    else {\r\n        const scheduler = createSchedulerFromOptions(opts);\r\n        // debounced autorun\r\n        let isScheduled = false;\r\n        reaction = new Reaction(name, () => {\r\n            if (!isScheduled) {\r\n                isScheduled = true;\r\n                scheduler(() => {\r\n                    isScheduled = false;\r\n                    if (!reaction.isDisposed_)\r\n                        reaction.track(reactionRunner);\r\n                });\r\n            }\r\n        }, opts.onError, opts.requiresObservable);\r\n    }\r\n    function reactionRunner() {\r\n        view(reaction);\r\n    }\r\n    reaction.schedule_();\r\n    return reaction.getDisposer_();\r\n}\r\nconst run = (f) => f();\r\nfunction createSchedulerFromOptions(opts) {\r\n    return opts.scheduler\r\n        ? opts.scheduler\r\n        : opts.delay\r\n            ? (f) => setTimeout(f, opts.delay)\r\n            : run;\r\n}\r\nexport function reaction(expression, effect, opts = EMPTY_OBJECT) {\r\n    if (__DEV__) {\r\n        if (!isFunction(expression) || !isFunction(effect))\r\n            die(\"First and second argument to reaction should be functions\");\r\n        if (!isPlainObject(opts))\r\n            die(\"Third argument of reactions should be an object\");\r\n    }\r\n    const name = opts.name ?? (__DEV__ ? \"Reaction@\" + getNextId() : \"Reaction\");\r\n    const effectAction = action(name, opts.onError ? wrapErrorHandler(opts.onError, effect) : effect);\r\n    const runSync = !opts.scheduler && !opts.delay;\r\n    const scheduler = createSchedulerFromOptions(opts);\r\n    let firstTime = true;\r\n    let isScheduled = false;\r\n    let value;\r\n    let oldValue = undefined; // only an issue with fireImmediately\r\n    const equals = opts.compareStructural\r\n        ? comparer.structural\r\n        : opts.equals || comparer.default;\r\n    const r = new Reaction(name, () => {\r\n        if (firstTime || runSync) {\r\n            reactionRunner();\r\n        }\r\n        else if (!isScheduled) {\r\n            isScheduled = true;\r\n            scheduler(reactionRunner);\r\n        }\r\n    }, opts.onError, opts.requiresObservable);\r\n    function reactionRunner() {\r\n        isScheduled = false;\r\n        if (r.isDisposed_)\r\n            return;\r\n        let changed = false;\r\n        r.track(() => {\r\n            const nextValue = allowStateChanges(false, () => expression(r));\r\n            changed = firstTime || !equals(value, nextValue);\r\n            oldValue = value;\r\n            value = nextValue;\r\n        });\r\n        if (firstTime && opts.fireImmediately)\r\n            effectAction(value, oldValue, r);\r\n        else if (!firstTime && changed)\r\n            effectAction(value, oldValue, r);\r\n        firstTime = false;\r\n    }\r\n    r.schedule_();\r\n    return r.getDisposer_();\r\n}\r\nfunction wrapErrorHandler(errorHandler, baseFn) {\r\n    return function () {\r\n        try {\r\n            return baseFn.apply(this, arguments);\r\n        }\r\n        catch (e) {\r\n            errorHandler.call(this, e);\r\n        }\r\n    };\r\n}\r\n//# sourceMappingURL=autorun.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"autorun.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/api/autorun.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sergeigolishnikov/development/web/mobx/packages/mobx/api/autorun.d.ts","writeByteOrderMark":false,"text":"import { IEqualsComparer, IReactionDisposer, IReactionPublic } from \"../internal\";\r\nexport interface IAutorunOptions {\r\n    delay?: number;\r\n    name?: string;\r\n    /**\r\n     * Experimental.\r\n     * Warns if the view doesn't track observables\r\n     */\r\n    requiresObservable?: boolean;\r\n    scheduler?: (callback: () => void) => any;\r\n    onError?: (error: any) => void;\r\n}\r\n/**\r\n * Creates a named reactive view and keeps it alive, so that the view is always\r\n * updated if one of the dependencies changes, even when the view is not further used by something else.\r\n * @param view The reactive view\r\n * @returns disposer function, which can be used to stop the view from being updated in the future.\r\n */\r\nexport declare function autorun(view: (r: IReactionPublic) => any, opts?: IAutorunOptions): IReactionDisposer;\r\nexport declare type IReactionOptions = IAutorunOptions & {\r\n    fireImmediately?: boolean;\r\n    equals?: IEqualsComparer<any>;\r\n};\r\nexport declare function reaction<T>(expression: (r: IReactionPublic) => T, effect: (arg: T, prev: T, r: IReactionPublic) => void, opts?: IReactionOptions): IReactionDisposer;\r\n"}}
