{"code":"import { endBatch, globalState, isSpyEnabled, spyReportEnd, spyReportStart, startBatch, untrackedEnd, untrackedStart, isFunction, allowStateReadsStart, allowStateReadsEnd, ACTION, EMPTY_ARRAY, die, getDescriptor } from \"../internal\";\r\n// we don't use globalState for these in order to avoid possible issues with multiple\r\n// mobx versions\r\nlet currentActionId = 0;\r\nlet nextActionId = 1;\r\nconst isFunctionNameConfigurable = getDescriptor(() => { }, \"name\")?.configurable ?? false;\r\n// we can safely recycle this object\r\nconst tmpNameDescriptor = {\r\n    value: \"action\",\r\n    configurable: true,\r\n    writable: false,\r\n    enumerable: false\r\n};\r\nexport function createAction(actionName, fn, autoAction = false, ref) {\r\n    if (__DEV__) {\r\n        if (!isFunction(fn))\r\n            die(\"`action` can only be invoked on functions\");\r\n        if (typeof actionName !== \"string\" || !actionName)\r\n            die(`actions should have valid names, got: '${actionName}'`);\r\n    }\r\n    function res() {\r\n        return executeAction(actionName, autoAction, fn, ref || this, arguments);\r\n    }\r\n    res.isMobxAction = true;\r\n    if (isFunctionNameConfigurable) {\r\n        tmpNameDescriptor.value = actionName;\r\n        Object.defineProperty(res, \"name\", tmpNameDescriptor);\r\n    }\r\n    return res;\r\n}\r\nexport function executeAction(actionName, canRunAsDerivation, fn, scope, args) {\r\n    const runInfo = _startAction(actionName, canRunAsDerivation, scope, args);\r\n    try {\r\n        return fn.apply(scope, args);\r\n    }\r\n    catch (err) {\r\n        runInfo.error_ = err;\r\n        throw err;\r\n    }\r\n    finally {\r\n        _endAction(runInfo);\r\n    }\r\n}\r\nexport function _startAction(actionName, canRunAsDerivation, // true for autoAction\r\nscope, args) {\r\n    const notifySpy_ = __DEV__ && isSpyEnabled() && !!actionName;\r\n    let startTime_ = 0;\r\n    if (__DEV__ && notifySpy_) {\r\n        startTime_ = Date.now();\r\n        const flattenedArgs = args ? Array.from(args) : EMPTY_ARRAY;\r\n        spyReportStart({\r\n            type: ACTION,\r\n            name: actionName,\r\n            object: scope,\r\n            arguments: flattenedArgs\r\n        });\r\n    }\r\n    const prevDerivation_ = globalState.trackingDerivation;\r\n    const runAsAction = !canRunAsDerivation || !prevDerivation_;\r\n    startBatch();\r\n    let prevAllowStateChanges_ = globalState.allowStateChanges; // by default preserve previous allow\r\n    if (runAsAction) {\r\n        untrackedStart();\r\n        prevAllowStateChanges_ = allowStateChangesStart(true);\r\n    }\r\n    const prevAllowStateReads_ = allowStateReadsStart(true);\r\n    const runInfo = {\r\n        runAsAction_: runAsAction,\r\n        prevDerivation_,\r\n        prevAllowStateChanges_,\r\n        prevAllowStateReads_,\r\n        notifySpy_,\r\n        startTime_,\r\n        actionId_: nextActionId++,\r\n        parentActionId_: currentActionId\r\n    };\r\n    currentActionId = runInfo.actionId_;\r\n    return runInfo;\r\n}\r\nexport function _endAction(runInfo) {\r\n    if (currentActionId !== runInfo.actionId_) {\r\n        die(30);\r\n    }\r\n    currentActionId = runInfo.parentActionId_;\r\n    if (runInfo.error_ !== undefined) {\r\n        globalState.suppressReactionErrors = true;\r\n    }\r\n    allowStateChangesEnd(runInfo.prevAllowStateChanges_);\r\n    allowStateReadsEnd(runInfo.prevAllowStateReads_);\r\n    endBatch();\r\n    if (runInfo.runAsAction_)\r\n        untrackedEnd(runInfo.prevDerivation_);\r\n    if (__DEV__ && runInfo.notifySpy_) {\r\n        spyReportEnd({ time: Date.now() - runInfo.startTime_ });\r\n    }\r\n    globalState.suppressReactionErrors = false;\r\n}\r\nexport function allowStateChanges(allowStateChanges, func) {\r\n    const prev = allowStateChangesStart(allowStateChanges);\r\n    try {\r\n        return func();\r\n    }\r\n    finally {\r\n        allowStateChangesEnd(prev);\r\n    }\r\n}\r\nexport function allowStateChangesStart(allowStateChanges) {\r\n    const prev = globalState.allowStateChanges;\r\n    globalState.allowStateChanges = allowStateChanges;\r\n    return prev;\r\n}\r\nexport function allowStateChangesEnd(prev) {\r\n    globalState.allowStateChanges = prev;\r\n}\r\n//# sourceMappingURL=action.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"action.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/core/action.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sergeigolishnikov/development/web/mobx/packages/mobx/core/action.d.ts","writeByteOrderMark":false,"text":"import { IDerivation } from \"../internal\";\r\nexport declare function createAction(actionName: string, fn: Function, autoAction?: boolean, ref?: Object): Function;\r\nexport declare function executeAction(actionName: string, canRunAsDerivation: boolean, fn: Function, scope?: any, args?: IArguments): any;\r\nexport interface IActionRunInfo {\r\n    prevDerivation_: IDerivation | null;\r\n    prevAllowStateChanges_: boolean;\r\n    prevAllowStateReads_: boolean;\r\n    notifySpy_: boolean;\r\n    startTime_: number;\r\n    error_?: any;\r\n    parentActionId_: number;\r\n    actionId_: number;\r\n    runAsAction_?: boolean;\r\n}\r\nexport declare function _startAction(actionName: string, canRunAsDerivation: boolean, // true for autoAction\r\nscope: any, args?: IArguments): IActionRunInfo;\r\nexport declare function _endAction(runInfo: IActionRunInfo): void;\r\nexport declare function allowStateChanges<T>(allowStateChanges: boolean, func: () => T): T;\r\nexport declare function allowStateChangesStart(allowStateChanges: boolean): boolean;\r\nexport declare function allowStateChangesEnd(prev: boolean): void;\r\n"}}
