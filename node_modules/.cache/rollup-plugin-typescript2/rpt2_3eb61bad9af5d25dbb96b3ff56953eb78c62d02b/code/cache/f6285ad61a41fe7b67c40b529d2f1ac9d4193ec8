{"code":"import { Atom, checkIfStateModificationsAreAllowed, comparer, createInstanceofPredicate, getNextId, hasInterceptors, hasListeners, interceptChange, isSpyEnabled, notifyListeners, registerInterceptor, registerListener, spyReport, spyReportEnd, spyReportStart, toPrimitive, globalState, UPDATE } from \"../internal\";\r\nconst CREATE = \"create\";\r\nexport class ObservableValue extends Atom {\r\n    enhancer;\r\n    name_;\r\n    equals;\r\n    hasUnreportedChange_ = false;\r\n    interceptors_;\r\n    changeListeners_;\r\n    value_;\r\n    dehancer;\r\n    constructor(value, enhancer, name_ = __DEV__ ? \"ObservableValue@\" + getNextId() : \"ObservableValue\", notifySpy = true, equals = comparer.default) {\r\n        super(name_);\r\n        this.enhancer = enhancer;\r\n        this.name_ = name_;\r\n        this.equals = equals;\r\n        this.value_ = enhancer(value, undefined, name_);\r\n        if (__DEV__ && notifySpy && isSpyEnabled()) {\r\n            // only notify spy if this is a stand-alone observable\r\n            spyReport({\r\n                type: CREATE,\r\n                object: this,\r\n                observableKind: \"value\",\r\n                debugObjectName: this.name_,\r\n                newValue: \"\" + this.value_\r\n            });\r\n        }\r\n    }\r\n    dehanceValue(value) {\r\n        if (this.dehancer !== undefined)\r\n            return this.dehancer(value);\r\n        return value;\r\n    }\r\n    set(newValue) {\r\n        const oldValue = this.value_;\r\n        newValue = this.prepareNewValue_(newValue);\r\n        if (newValue !== globalState.UNCHANGED) {\r\n            const notifySpy = isSpyEnabled();\r\n            if (__DEV__ && notifySpy) {\r\n                spyReportStart({\r\n                    type: UPDATE,\r\n                    object: this,\r\n                    observableKind: \"value\",\r\n                    debugObjectName: this.name_,\r\n                    newValue,\r\n                    oldValue\r\n                });\r\n            }\r\n            this.setNewValue_(newValue);\r\n            if (__DEV__ && notifySpy)\r\n                spyReportEnd();\r\n        }\r\n    }\r\n    prepareNewValue_(newValue) {\r\n        checkIfStateModificationsAreAllowed(this);\r\n        if (hasInterceptors(this)) {\r\n            const change = interceptChange(this, {\r\n                object: this,\r\n                type: UPDATE,\r\n                newValue\r\n            });\r\n            if (!change)\r\n                return globalState.UNCHANGED;\r\n            newValue = change.newValue;\r\n        }\r\n        // apply modifier\r\n        newValue = this.enhancer(newValue, this.value_, this.name_);\r\n        return this.equals(this.value_, newValue) ? globalState.UNCHANGED : newValue;\r\n    }\r\n    setNewValue_(newValue) {\r\n        const oldValue = this.value_;\r\n        this.value_ = newValue;\r\n        this.reportChanged();\r\n        if (hasListeners(this)) {\r\n            notifyListeners(this, {\r\n                type: UPDATE,\r\n                object: this,\r\n                newValue,\r\n                oldValue\r\n            });\r\n        }\r\n    }\r\n    get() {\r\n        this.reportObserved();\r\n        return this.dehanceValue(this.value_);\r\n    }\r\n    intercept_(handler) {\r\n        return registerInterceptor(this, handler);\r\n    }\r\n    observe_(listener, fireImmediately) {\r\n        if (fireImmediately)\r\n            listener({\r\n                observableKind: \"value\",\r\n                debugObjectName: this.name_,\r\n                object: this,\r\n                type: UPDATE,\r\n                newValue: this.value_,\r\n                oldValue: undefined\r\n            });\r\n        return registerListener(this, listener);\r\n    }\r\n    raw() {\r\n        // used by MST ot get undehanced value\r\n        return this.value_;\r\n    }\r\n    toJSON() {\r\n        return this.get();\r\n    }\r\n    toString() {\r\n        return `${this.name_}[${this.value_}]`;\r\n    }\r\n    valueOf() {\r\n        return toPrimitive(this.get());\r\n    }\r\n    [Symbol.toPrimitive]() {\r\n        return this.valueOf();\r\n    }\r\n}\r\nexport const isObservableValue = createInstanceofPredicate(\"ObservableValue\", ObservableValue);\r\n//# sourceMappingURL=observablevalue.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"observablevalue.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/types/observablevalue.ts\"],\"names\":[],\"mappings\":\"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\"}"}
