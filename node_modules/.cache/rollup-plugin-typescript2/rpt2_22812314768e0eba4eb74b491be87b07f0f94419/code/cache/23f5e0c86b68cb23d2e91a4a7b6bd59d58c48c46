{"code":"import { ObservableMap, ObservableSet, ObservableValue, asDynamicObservableObject, createObservableArray, deepEnhancer, extendObservable, isES6Map, isES6Set, isObservable, isPlainObject, referenceEnhancer, shallowEnhancer, refStructEnhancer, asObservableObject, storeAnnotation, createDecoratorAnnotation, createLegacyArray, globalState, assign, isStringish, createObservableAnnotation } from \"../internal\";\r\nexport const OBSERVABLE = \"observable\";\r\nexport const OBSERVABLE_REF = \"observable.ref\";\r\nexport const OBSERVABLE_SHALLOW = \"observable.shallow\";\r\nexport const OBSERVABLE_STRUCT = \"observable.struct\";\r\n// Predefined bags of create observable options, to avoid allocating temporarily option objects\r\n// in the majority of cases\r\nexport const defaultCreateObservableOptions = {\r\n    deep: true,\r\n    name: undefined,\r\n    defaultDecorator: undefined,\r\n    proxy: true\r\n};\r\nObject.freeze(defaultCreateObservableOptions);\r\nexport function asCreateObservableOptions(thing) {\r\n    return thing || defaultCreateObservableOptions;\r\n}\r\nconst observableAnnotation = createObservableAnnotation(\"observable\");\r\nconst observableRefAnnotation = createObservableAnnotation(\"observable.ref\", {\r\n    enhancer: referenceEnhancer\r\n});\r\nconst observableShallowAnnotation = createObservableAnnotation(\"observable.shallow\", {\r\n    enhancer: shallowEnhancer\r\n});\r\nconst observableStructAnnotation = createObservableAnnotation(\"observable.struct\", {\r\n    enhancer: refStructEnhancer\r\n});\r\nconst observableDecoratorAnnotation = createDecoratorAnnotation(observableAnnotation);\r\nexport function getEnhancerFromOptions(options) {\r\n    return options.deep === true\r\n        ? deepEnhancer\r\n        : options.deep === false\r\n            ? referenceEnhancer\r\n            : getEnhancerFromAnnotation(options.defaultDecorator);\r\n}\r\nexport function getAnnotationFromOptions(options) {\r\n    return options\r\n        ? options.deep === true\r\n            ? observableAnnotation\r\n            : options.deep === false\r\n                ? observableRefAnnotation\r\n                : options.defaultDecorator\r\n        : undefined;\r\n}\r\nexport function getEnhancerFromAnnotation(annotation) {\r\n    return !annotation ? deepEnhancer : annotation.options_?.enhancer ?? deepEnhancer;\r\n}\r\n/**\r\n * Turns an object, array or function into a reactive structure.\r\n * @param v the value which should become observable.\r\n */\r\nfunction createObservable(v, arg2, arg3) {\r\n    // @observable someProp;\r\n    if (isStringish(arg2)) {\r\n        storeAnnotation(v, arg2, observableAnnotation);\r\n        return;\r\n    }\r\n    // already observable - ignore\r\n    if (isObservable(v))\r\n        return v;\r\n    // plain object\r\n    if (isPlainObject(v))\r\n        return observable.object(v, arg2, arg3);\r\n    // Array\r\n    if (Array.isArray(v))\r\n        return observable.array(v, arg2);\r\n    // Map\r\n    if (isES6Map(v))\r\n        return observable.map(v, arg2);\r\n    // Set\r\n    if (isES6Set(v))\r\n        return observable.set(v, arg2);\r\n    // other object - ignore\r\n    if (typeof v === \"object\" && v !== null)\r\n        return v;\r\n    // anything else\r\n    return observable.box(v, arg2);\r\n}\r\nObject.assign(createObservable, observableDecoratorAnnotation);\r\nconst observableFactories = {\r\n    box(value, options) {\r\n        const o = asCreateObservableOptions(options);\r\n        return new ObservableValue(value, getEnhancerFromOptions(o), o.name, true, o.equals);\r\n    },\r\n    array(initialValues, options) {\r\n        const o = asCreateObservableOptions(options);\r\n        return (globalState.useProxies === false || o.proxy === false\r\n            ? createLegacyArray\r\n            : createObservableArray)(initialValues, getEnhancerFromOptions(o), o.name);\r\n    },\r\n    map(initialValues, options) {\r\n        const o = asCreateObservableOptions(options);\r\n        return new ObservableMap(initialValues, getEnhancerFromOptions(o), o.name);\r\n    },\r\n    set(initialValues, options) {\r\n        const o = asCreateObservableOptions(options);\r\n        return new ObservableSet(initialValues, getEnhancerFromOptions(o), o.name);\r\n    },\r\n    object(props, decorators, options) {\r\n        return extendObservable(globalState.useProxies === false || options?.proxy === false\r\n            ? asObservableObject({}, options)\r\n            : asDynamicObservableObject({}, options), props, decorators);\r\n    },\r\n    ref: createDecoratorAnnotation(observableRefAnnotation),\r\n    shallow: createDecoratorAnnotation(observableShallowAnnotation),\r\n    deep: observableDecoratorAnnotation,\r\n    struct: createDecoratorAnnotation(observableStructAnnotation)\r\n};\r\n// eslint-disable-next-line\r\nexport var observable = assign(createObservable, observableFactories);\r\n//# sourceMappingURL=observable.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"observable.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/api/observable.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sergeigolishnikov/development/web/mobx/packages/mobx/api/observable.d.ts","writeByteOrderMark":false,"text":"import { IEnhancer, IEqualsComparer, IObservableArray, IObservableMapInitialValues, IObservableSetInitialValues, IObservableValue, ObservableMap, ObservableSet, Annotation, AnnotationsMap } from \"../internal\";\r\nexport declare const OBSERVABLE = \"observable\";\r\nexport declare const OBSERVABLE_REF = \"observable.ref\";\r\nexport declare const OBSERVABLE_SHALLOW = \"observable.shallow\";\r\nexport declare const OBSERVABLE_STRUCT = \"observable.struct\";\r\nexport declare type CreateObservableOptions = {\r\n    name?: string;\r\n    equals?: IEqualsComparer<any>;\r\n    deep?: boolean;\r\n    defaultDecorator?: Annotation;\r\n    proxy?: boolean;\r\n    autoBind?: boolean;\r\n};\r\nexport declare const defaultCreateObservableOptions: CreateObservableOptions;\r\nexport declare function asCreateObservableOptions(thing: any): CreateObservableOptions;\r\nexport declare function getEnhancerFromOptions(options: CreateObservableOptions): IEnhancer<any>;\r\nexport declare function getAnnotationFromOptions(options?: CreateObservableOptions): Annotation | undefined;\r\nexport declare function getEnhancerFromAnnotation(annotation?: Annotation): IEnhancer<any>;\r\nexport interface IObservableFactory extends Annotation, PropertyDecorator {\r\n    <T = any>(value: T[], options?: CreateObservableOptions): IObservableArray<T>;\r\n    <T = any>(value: Set<T>, options?: CreateObservableOptions): ObservableSet<T>;\r\n    <K = any, V = any>(value: Map<K, V>, options?: CreateObservableOptions): ObservableMap<K, V>;\r\n    <T extends object>(value: T, decorators?: AnnotationsMap<T, never>, options?: CreateObservableOptions): T;\r\n    box: <T = any>(value?: T, options?: CreateObservableOptions) => IObservableValue<T>;\r\n    array: <T = any>(initialValues?: T[], options?: CreateObservableOptions) => IObservableArray<T>;\r\n    set: <T = any>(initialValues?: IObservableSetInitialValues<T>, options?: CreateObservableOptions) => ObservableSet<T>;\r\n    map: <K = any, V = any>(initialValues?: IObservableMapInitialValues<K, V>, options?: CreateObservableOptions) => ObservableMap<K, V>;\r\n    object: <T = any>(props: T, decorators?: AnnotationsMap<T, never>, options?: CreateObservableOptions) => T;\r\n    /**\r\n     * Decorator that creates an observable that only observes the references, but doesn't try to turn the assigned value into an observable.ts.\r\n     */\r\n    ref: Annotation & PropertyDecorator;\r\n    /**\r\n     * Decorator that creates an observable converts its value (objects, maps or arrays) into a shallow observable structure\r\n     */\r\n    shallow: Annotation & PropertyDecorator;\r\n    deep: Annotation & PropertyDecorator;\r\n    struct: Annotation & PropertyDecorator;\r\n}\r\nexport declare var observable: IObservableFactory;\r\n"}}
