{"code":"import { defineProperty, getDescriptor, objectPrototype, die, flow, isFlow, recordAnnotationApplied, isFunction, globalState, storedAnnotationsSymbol } from \"../internal\";\r\nexport function createFlowAnnotation(name, options) {\r\n    return {\r\n        annotationType_: name,\r\n        options_: options,\r\n        make_,\r\n        extend_\r\n    };\r\n}\r\nfunction make_(adm, key) {\r\n    let annotated = false;\r\n    let source = adm.target_;\r\n    while (source && source !== objectPrototype) {\r\n        const descriptor = getDescriptor(source, key);\r\n        if (descriptor) {\r\n            if (source !== adm.target_) {\r\n                // Prototype\r\n                if (isFlow(descriptor.value)) {\r\n                    // A prototype could have been annotated already by other constructor,\r\n                    // rest of the proto chain must be annotated already\r\n                    annotated = true;\r\n                    break;\r\n                }\r\n                const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor, false);\r\n                defineProperty(source, key, flowDescriptor);\r\n            }\r\n            else {\r\n                const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor);\r\n                const definePropertyOutcome = adm.defineProperty_(key, flowDescriptor);\r\n                if (!definePropertyOutcome) {\r\n                    // Intercepted\r\n                    return;\r\n                }\r\n            }\r\n            annotated = true;\r\n        }\r\n        source = Object.getPrototypeOf(source);\r\n    }\r\n    if (annotated) {\r\n        recordAnnotationApplied(adm, this, key);\r\n    }\r\n    else if (!adm.target_[storedAnnotationsSymbol]?.[key]) {\r\n        // Throw on missing key, except for decorators:\r\n        // Decorator annotations are collected from whole prototype chain.\r\n        // When called from super() some props may not exist yet.\r\n        // However we don't have to worry about missing prop,\r\n        // because the decorator must have been applied to something.\r\n        die(1, this.annotationType_, `${adm.name_}.${key.toString()}`);\r\n    }\r\n}\r\nfunction extend_(adm, key, descriptor, proxyTrap) {\r\n    const flowDescriptor = createFlowDescriptor(adm, this, key, descriptor);\r\n    return adm.defineProperty_(key, flowDescriptor, proxyTrap);\r\n}\r\nfunction assertFlowDescriptor(adm, { annotationType_ }, key, { value }) {\r\n    if (__DEV__ && !isFunction(value)) {\r\n        die(`Cannot apply '${annotationType_}' to '${adm.name_}.${key.toString()}':` +\r\n            `\\n'${annotationType_}' can only be used on properties with a generator function value.`);\r\n    }\r\n}\r\nfunction createFlowDescriptor(adm, annotation, key, descriptor, \r\n// provides ability to disable safeDescriptors for prototypes\r\nsafeDescriptors = globalState.safeDescriptors) {\r\n    assertFlowDescriptor(adm, annotation, key, descriptor);\r\n    return {\r\n        value: flow(descriptor.value),\r\n        // Non-configurable for classes\r\n        // prevents accidental field redefinition in subclass\r\n        configurable: safeDescriptors ? adm.isPlainObject_ : true,\r\n        // https://github.com/mobxjs/mobx/pull/2641#issuecomment-737292058\r\n        enumerable: false,\r\n        // Non-obsevable, therefore non-writable\r\n        // Also prevents rewriting in subclass constructor\r\n        writable: safeDescriptors ? false : true\r\n    };\r\n}\r\n//# sourceMappingURL=flowannotation.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"flowannotation.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/types/flowannotation.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/sergeigolishnikov/development/web/mobx/packages/mobx/types/flowannotation.d.ts","writeByteOrderMark":false,"text":"import { Annotation } from \"../internal\";\r\nexport declare function createFlowAnnotation(name: string, options?: object): Annotation;\r\n"}}
