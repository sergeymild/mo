{"code":"import { deepEqual, isES6Map, isES6Set, isObservable, isObservableArray, isObservableMap, isObservableSet, isObservableObject, isPlainObject, observable, die } from \"../internal\";\r\nexport function deepEnhancer(v, _, name) {\r\n    // it is an observable already, done\r\n    if (isObservable(v))\r\n        return v;\r\n    // something that can be converted and mutated?\r\n    if (Array.isArray(v))\r\n        return observable.array(v, { name });\r\n    if (isPlainObject(v))\r\n        return observable.object(v, undefined, { name });\r\n    if (isES6Map(v))\r\n        return observable.map(v, { name });\r\n    if (isES6Set(v))\r\n        return observable.set(v, { name });\r\n    return v;\r\n}\r\nexport function shallowEnhancer(v, _, name) {\r\n    if (v === undefined || v === null)\r\n        return v;\r\n    if (isObservableObject(v) || isObservableArray(v) || isObservableMap(v) || isObservableSet(v))\r\n        return v;\r\n    if (Array.isArray(v))\r\n        return observable.array(v, { name, deep: false });\r\n    if (isPlainObject(v))\r\n        return observable.object(v, undefined, { name, deep: false });\r\n    if (isES6Map(v))\r\n        return observable.map(v, { name, deep: false });\r\n    if (isES6Set(v))\r\n        return observable.set(v, { name, deep: false });\r\n    if (__DEV__)\r\n        die(\"The shallow modifier / decorator can only used in combination with arrays, objects, maps and sets\");\r\n}\r\nexport function referenceEnhancer(newValue) {\r\n    // never turn into an observable\r\n    return newValue;\r\n}\r\nexport function refStructEnhancer(v, oldValue) {\r\n    if (__DEV__ && isObservable(v))\r\n        die(`observable.struct should not be used with observable values`);\r\n    if (deepEqual(v, oldValue))\r\n        return oldValue;\r\n    return v;\r\n}\r\n//# sourceMappingURL=modifiers.js.map","references":["/Users/sergeigolishnikov/development/web/mobx/packages/mobx/src/internal.ts"],"map":"{\"version\":3,\"file\":\"modifiers.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/types/modifiers.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EACH,SAAS,EACT,QAAQ,EACR,QAAQ,EACR,YAAY,EACZ,iBAAiB,EACjB,eAAe,EACf,eAAe,EACf,kBAAkB,EAClB,aAAa,EACb,UAAU,EACV,GAAG,EACN,MAAM,aAAa,CAAA;AAMpB,MAAM,UAAU,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI;IACnC,oCAAoC;IACpC,IAAI,YAAY,CAAC,CAAC,CAAC;QAAE,OAAO,CAAC,CAAA;IAE7B,+CAA+C;IAC/C,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAAE,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAA;IAC1D,IAAI,aAAa,CAAC,CAAC,CAAC;QAAE,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,IAAI,EAAE,CAAC,CAAA;IACtE,IAAI,QAAQ,CAAC,CAAC,CAAC;QAAE,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAA;IACnD,IAAI,QAAQ,CAAC,CAAC,CAAC;QAAE,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,CAAC,CAAA;IAEnD,OAAO,CAAC,CAAA;AACZ,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI;IACtC,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,IAAI;QAAE,OAAO,CAAC,CAAA;IAC3C,IAAI,kBAAkB,CAAC,CAAC,CAAC,IAAI,iBAAiB,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC;QACzF,OAAO,CAAC,CAAA;IACZ,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAAE,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAA;IACvE,IAAI,aAAa,CAAC,CAAC,CAAC;QAAE,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAA;IACnF,IAAI,QAAQ,CAAC,CAAC,CAAC;QAAE,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAA;IAChE,IAAI,QAAQ,CAAC,CAAC,CAAC;QAAE,OAAO,UAAU,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,CAAA;IAEhE,IAAI,OAAO;QACP,GAAG,CACC,mGAAmG,CACtG,CAAA;AACT,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,QAAS;IACvC,gCAAgC;IAChC,OAAO,QAAQ,CAAA;AACnB,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,CAAC,EAAE,QAAQ;IACzC,IAAI,OAAO,IAAI,YAAY,CAAC,CAAC,CAAC;QAC1B,GAAG,CAAC,6DAA6D,CAAC,CAAA;IACtE,IAAI,SAAS,CAAC,CAAC,EAAE,QAAQ,CAAC;QAAE,OAAO,QAAQ,CAAA;IAC3C,OAAO,CAAC,CAAA;AACZ,CAAC\"}","dts":{"name":"/Users/sergeigolishnikov/development/web/mobx/packages/mobx/types/modifiers.d.ts","writeByteOrderMark":false,"text":"export interface IEnhancer<T> {\r\n    (newValue: T, oldValue: T | undefined, name: string): T;\r\n}\r\nexport declare function deepEnhancer(v: any, _: any, name: any): any;\r\nexport declare function shallowEnhancer(v: any, _: any, name: any): any;\r\nexport declare function referenceEnhancer(newValue?: any): any;\r\nexport declare function refStructEnhancer(v: any, oldValue: any): any;\r\n"}}
